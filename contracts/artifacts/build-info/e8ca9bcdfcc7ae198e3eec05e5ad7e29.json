{
	"id": "e8ca9bcdfcc7ae198e3eec05e5ad7e29",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NaughtCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\n\n contract NaughtCoin is ERC20 {\n\n  // string public constant name = 'NaughtCoin';\n  // string public constant symbol = '0x0';\n  // uint public constant decimals = 18;\n  uint public timeLock = now + 10 * 365 days;\n  uint256 public INITIAL_SUPPLY;\n  address public player;\n\n  constructor(address _player) \n  ERC20('NaughtCoin', '0x0')\n  public {\n    player = _player;\n    INITIAL_SUPPLY = 1000000 * (10**uint256(decimals()));\n    // _totalSupply = INITIAL_SUPPLY;\n    // _balances[player] = INITIAL_SUPPLY;\n    _mint(player, INITIAL_SUPPLY);\n    emit Transfer(address(0), player, INITIAL_SUPPLY);\n  }\n  \n  function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {\n    super.transfer(_to, _value);\n  }\n\n  // Prevent the initial owner from transferring tokens until the timelock has passed\n  modifier lockTokens() {\n    if (msg.sender == player) {\n      require(now > timeLock);\n      _;\n    } else {\n     _;\n    }\n  } \n} "
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NaughtCoin.sol": {
				"NaughtCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/NaughtCoin.sol\":144:1092  contract NaughtCoin is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NaughtCoin.sol\":341:354  10 * 365 days */\n  0x12cc0300\n    /* \"contracts/NaughtCoin.sol\":335:338  now */\n  timestamp\n    /* \"contracts/NaughtCoin.sol\":335:354  now + 10 * 365 days */\n  add\n    /* \"contracts/NaughtCoin.sol\":312:354  uint public timeLock = now + 10 * 365 days */\n  0x06\n  sstore\n    /* \"contracts/NaughtCoin.sol\":417:741  constructor(address _player) ... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/NaughtCoin.sol\":417:741  constructor(address _player) ... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/NaughtCoin.sol\":417:741  constructor(address _player) ... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6175676874436f696e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x3078300000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"contracts/NaughtCoin.sol\":500:507  _player */\n  dup1\n    /* \"contracts/NaughtCoin.sol\":491:497  player */\n  0x08\n  0x00\n    /* \"contracts/NaughtCoin.sol\":491:507  player = _player */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NaughtCoin.sol\":553:563  decimals() */\n  tag_10\n    /* \"contracts/NaughtCoin.sol\":553:561  decimals */\n  shl(0x20, tag_11)\n    /* \"contracts/NaughtCoin.sol\":553:563  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/NaughtCoin.sol\":545:564  uint256(decimals()) */\n  0xff\n  and\n    /* \"contracts/NaughtCoin.sol\":541:543  10 */\n  0x0a\n    /* \"contracts/NaughtCoin.sol\":541:564  10**uint256(decimals()) */\n  exp\n    /* \"contracts/NaughtCoin.sol\":530:537  1000000 */\n  0x0f4240\n    /* \"contracts/NaughtCoin.sol\":530:565  1000000 * (10**uint256(decimals())) */\n  mul\n    /* \"contracts/NaughtCoin.sol\":513:527  INITIAL_SUPPLY */\n  0x07\n    /* \"contracts/NaughtCoin.sol\":513:565  INITIAL_SUPPLY = 1000000 * (10**uint256(decimals())) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NaughtCoin.sol\":652:681  _mint(player, INITIAL_SUPPLY) */\n  tag_12\n    /* \"contracts/NaughtCoin.sol\":658:664  player */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NaughtCoin.sol\":666:680  INITIAL_SUPPLY */\n  sload(0x07)\n    /* \"contracts/NaughtCoin.sol\":652:657  _mint */\n  shl(0x20, tag_13)\n    /* \"contracts/NaughtCoin.sol\":652:681  _mint(player, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/NaughtCoin.sol\":713:719  player */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NaughtCoin.sol\":692:736  Transfer(address(0), player, INITIAL_SUPPLY) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NaughtCoin.sol\":709:710  0 */\n  0x00\n    /* \"contracts/NaughtCoin.sol\":692:736  Transfer(address(0), player, INITIAL_SUPPLY) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/NaughtCoin.sol\":721:735  INITIAL_SUPPLY */\n  sload(0x07)\n    /* \"contracts/NaughtCoin.sol\":692:736  Transfer(address(0), player, INITIAL_SUPPLY) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NaughtCoin.sol\":417:741  constructor(address _player) ... */\n  pop\n    /* \"contracts/NaughtCoin.sol\":144:1092  contract NaughtCoin is ERC20 {... */\n  jump(tag_14)\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n  swap1\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\ntag_13:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7934:7935  0 */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7915:7922  account */\n  dup3\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  tag_18\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n  dup4\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n  dup4\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n  shl(0x20, tag_19)\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  tag_20\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n  sload(0x02)\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n  or(tag_0_87, shl(0x20, tag_21))\n  swap1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n  0x02\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  tag_22\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8123:8130  account */\n  dup6\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n  or(tag_0_87, shl(0x20, tag_21))\n  swap1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8102:8109  account */\n  dup5\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8179:8186  account */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8175:8176  0 */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8188:8194  amount */\n  dup4\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\ntag_19:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_21:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2783:2784  b */\n  dup3\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2780  a */\n  dup5\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2784  a + b */\n  add\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n  swap1\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2807:2808  a */\n  dup4\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2803  c */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n  lt\n  iszero\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2857:2858  c */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2850:2858  return c */\n  swap2\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NaughtCoin.sol\":144:1092  contract NaughtCoin is ERC20 {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\ntag_26:\n  pop\n  swap1\n  pop\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\n  tag_32\n  swap2\n  swap1\ntag_33:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_34\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_33)\ntag_34:\n  pop\n  swap1\n  jump\ntag_32:\n  swap1\n  jump\t// out\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NaughtCoin.sol\":144:1092  contract NaughtCoin is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/NaughtCoin.sol\":144:1092  contract NaughtCoin is ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x48db5f89\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd085835a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x48db5f89\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_22:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_22)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_25:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NaughtCoin.sol\":358:387  uint256 public INITIAL_SUPPLY */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NaughtCoin.sol\":391:412  address public player */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_48:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_48)\n    tag_50:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NaughtCoin.sol\":747:873  function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {... */\n    tag_14:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n        /* \"contracts/NaughtCoin.sol\":747:873  function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NaughtCoin.sol\":312:354  uint public timeLock = now + 10 * 365 days */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_68\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_69\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_71\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_68:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_30:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_74\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_75\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_74:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_76\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_77\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_78\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_79\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_80\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_71\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_76:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NaughtCoin.sol\":358:387  uint256 public INITIAL_SUPPLY */\n    tag_35:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_37:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_83\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_84\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_85\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_86\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_87\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_71\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_83:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NaughtCoin.sol\":391:412  address public player */\n    tag_42:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_94\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_95\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_96\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_97\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_80\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_71\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_94:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NaughtCoin.sol\":747:873  function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {... */\n    tag_57:\n        /* \"contracts/NaughtCoin.sol\":829:833  bool */\n      0x00\n        /* \"contracts/NaughtCoin.sol\":1009:1015  player */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NaughtCoin.sol\":995:1015  msg.sender == player */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NaughtCoin.sol\":995:1005  msg.sender */\n      caller\n        /* \"contracts/NaughtCoin.sol\":995:1015  msg.sender == player */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NaughtCoin.sol\":991:1085  if (msg.sender == player) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/NaughtCoin.sol\":1039:1047  timeLock */\n      sload(0x06)\n        /* \"contracts/NaughtCoin.sol\":1033:1036  now */\n      timestamp\n        /* \"contracts/NaughtCoin.sol\":1033:1047  now > timeLock */\n      gt\n        /* \"contracts/NaughtCoin.sol\":1025:1048  require(now > timeLock) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"contracts/NaughtCoin.sol\":841:868  super.transfer(_to, _value) */\n      tag_102\n        /* \"contracts/NaughtCoin.sol\":856:859  _to */\n      dup4\n        /* \"contracts/NaughtCoin.sol\":861:867  _value */\n      dup4\n        /* \"contracts/NaughtCoin.sol\":841:855  super.transfer */\n      tag_103\n        /* \"contracts/NaughtCoin.sol\":841:868  super.transfer(_to, _value) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/NaughtCoin.sol\":991:1085  if (msg.sender == player) {... */\n      jump(tag_104)\n    tag_99:\n        /* \"contracts/NaughtCoin.sol\":841:868  super.transfer(_to, _value) */\n      tag_106\n        /* \"contracts/NaughtCoin.sol\":856:859  _to */\n      dup4\n        /* \"contracts/NaughtCoin.sol\":861:867  _value */\n      dup4\n        /* \"contracts/NaughtCoin.sol\":841:855  super.transfer */\n      tag_103\n        /* \"contracts/NaughtCoin.sol\":841:868  super.transfer(_to, _value) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"contracts/NaughtCoin.sol\":991:1085  if (msg.sender == player) {... */\n    tag_104:\n        /* \"contracts/NaughtCoin.sol\":747:873  function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NaughtCoin.sol\":312:354  uint public timeLock = now + 10 * 365 days */\n    tag_59:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_62:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_70:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_71:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_75:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_115\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_116\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_115:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_117\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_80\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_118\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_87\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_121:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_121)\n    tag_123:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_124:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_103:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_128\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_129\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_70\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_75\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_128:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_116:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212209d1ebf8b9332f77cfaa03bb8b88a67614c3482f10bf9a6f23e05ee04be59eccb64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526312cc030042016006553480156200001b57600080fd5b50604051620017e5380380620017e5833981810160405260208110156200004157600080fd5b81019080805190602001909291905050506040518060400160405280600a81526020017f4e6175676874436f696e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f30783000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000d6929190620004ba565b508060049080519060200190620000ef929190620004ba565b506012600560006101000a81548160ff021916908360ff160217905550505080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015f6200023760201b60201c565b60ff16600a0a620f424002600781905550620001a6600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166007546200024e60201b60201c565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6007546040518082815260200191505060405180910390a35062000569565b6000600560009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000306600083836200042c60201b60201c565b62000322816002546200043160201b6200108a1790919060201c565b60028190555062000380816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200043160201b6200108a1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620004b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004fd57805160ff19168380011785556200052e565b828001600101855582156200052e579182015b828111156200052d57825182559160200191906001019062000510565b5b5090506200053d919062000541565b5090565b6200056691905b808211156200056257600081600090555060010162000548565b5090565b90565b61126c80620005796000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806348db5f891161008c578063a457c2d711610066578063a457c2d714610449578063a9059cbb146104af578063d085835a14610515578063dd62ed3e14610533576100ea565b806348db5f891461032457806370a082311461036e57806395d89b41146103c6576100ea565b806323b872dd116100c857806323b872dd146101f65780632ff2e9dc1461027c578063313ce5671461029a57806339509351146102be576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061064d565b604051808215151515815260200191505060405180910390f35b6101e061066b565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610675565b604051808215151515815260200191505060405180910390f35b61028461074e565b6040518082815260200191505060405180910390f35b6102a2610754565b604051808260ff1660ff16815260200191505060405180910390f35b61030a600480360360408110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061076b565b604051808215151515815260200191505060405180910390f35b61032c61081e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b06004803603602081101561038457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610844565b6040518082815260200191505060405180910390f35b6103ce61088c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040e5780820151818401526020810190506103f3565b50505050905090810190601f16801561043b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104956004803603604081101561045f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092e565b604051808215151515815260200191505060405180910390f35b6104fb600480360360408110156104c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109fb565b604051808215151515815260200191505060405180910390f35b61051d610a83565b6040518082815260200191505060405180910390f35b6105956004803603604081101561054957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a89565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106435780601f1061061857610100808354040283529160200191610643565b820191906000526020600020905b81548152906001019060200180831161062657829003601f168201915b5050505050905090565b600061066161065a610b10565b8484610b18565b6001905092915050565b6000600254905090565b6000610682848484610d0f565b6107438461068e610b10565b61073e856040518060600160405280602881526020016111a160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106f4610b10565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd09092919063ffffffff16565b610b18565b600190509392505050565b60075481565b6000600560009054906101000a900460ff16905090565b6000610814610778610b10565b8461080f8560016000610789610b10565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461108a90919063ffffffff16565b610b18565b6001905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109245780601f106108f957610100808354040283529160200191610924565b820191906000526020600020905b81548152906001019060200180831161090757829003601f168201915b5050505050905090565b60006109f161093b610b10565b846109ec856040518060600160405280602581526020016112126025913960016000610965610b10565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd09092919063ffffffff16565b610b18565b6001905092915050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a71576006544211610a6157600080fd5b610a6b8383611112565b50610a7d565b610a7b8383611112565b505b92915050565b60065481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806111ee6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111596022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111c96025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806111366023913960400191505060405180910390fd5b610e26838383611130565b610e918160405180606001604052806026815260200161117b602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd09092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f24816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461108a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061107d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611042578082015181840152602081019050611027565b50505050905090810190601f16801561106f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015611108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061112661111f610b10565b8484610d0f565b6001905092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209d1ebf8b9332f77cfaa03bb8b88a67614c3482f10bf9a6f23e05ee04be59eccb64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x12CC0300 TIMESTAMP ADD PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17E5 CODESIZE SUB DUP1 PUSH3 0x17E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6175676874436F696E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD6 SWAP3 SWAP2 SWAP1 PUSH3 0x4BA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xEF SWAP3 SWAP2 SWAP1 PUSH3 0x4BA JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x15F PUSH3 0x237 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH3 0xF4240 MUL PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0x1A6 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 SLOAD PUSH3 0x24E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x569 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x306 PUSH1 0x0 DUP4 DUP4 PUSH3 0x42C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x322 DUP2 PUSH1 0x2 SLOAD PUSH3 0x431 PUSH1 0x20 SHL PUSH3 0x108A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x380 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x431 PUSH1 0x20 SHL PUSH3 0x108A OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x4FD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x52E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x52E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x52D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x510 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x53D SWAP2 SWAP1 PUSH3 0x541 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x566 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x562 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x548 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x126C DUP1 PUSH3 0x579 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48DB5F89 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD085835A EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x533 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x48DB5F89 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C6 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x137 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x643 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x618 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x643 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x626 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x661 PUSH2 0x65A PUSH2 0xB10 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP5 DUP5 DUP5 PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x68E PUSH2 0xB10 JUMP JUMPDEST PUSH2 0x73E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x6F4 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x814 PUSH2 0x778 PUSH2 0xB10 JUMP JUMPDEST DUP5 PUSH2 0x80F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x789 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x108A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x924 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x924 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x907 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F1 PUSH2 0x93B PUSH2 0xB10 JUMP JUMPDEST DUP5 PUSH2 0x9EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1212 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x965 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP4 DUP4 PUSH2 0x1112 JUMP JUMPDEST POP PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xA7B DUP4 DUP4 PUSH2 0x1112 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11EE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1159 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11C9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1136 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE26 DUP4 DUP4 DUP4 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF24 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x108A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1042 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1027 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x106F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 PUSH2 0x111F PUSH2 0xB10 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209D1E 0xBF DUP12 SWAP4 ORIGIN 0xF7 PUSH29 0xFAA03BB8B88A67614C3482F10BF9A6F23E05EE04BE59ECCB64736F6C63 NUMBER STOP MOD STOP STOP CALLER ",
							"sourceMap": "144:948:0:-:0;;;341:13;335:3;:19;312:42;;417:324;8:9:-1;5:2;;;30:1;27;20:12;5:2;417:324:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;417:324:0;;;;;;;;;;;;;;;;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;500:7:0::1;491:6;;:16;;;;;;;;;;;;;;;;;;553:10;:8;;;:10;;:::i;:::-;545:19;;541:2;:23;530:7;:35;513:14;:52;;;;652:29;658:6;;;;;;;;;;;666:14;;652:5;;;:29;;:::i;:::-;713:6;;;;;;;;;;;692:44;;709:1;692:44;;;721:14;;692:44;;;;;;;;;;;;;;;;;;417:324:::0;144:948;;3086:89:2;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;7832:370::-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;;;:49;;:::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o;2690:175:1:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;144:948:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48DB5F89 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD085835A EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x533 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x48DB5F89 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C6 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BE JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x137 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x164 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51D PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x643 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x618 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x643 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x626 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x661 PUSH2 0x65A PUSH2 0xB10 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP5 DUP5 DUP5 PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x743 DUP5 PUSH2 0x68E PUSH2 0xB10 JUMP JUMPDEST PUSH2 0x73E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A1 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x6F4 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x814 PUSH2 0x778 PUSH2 0xB10 JUMP JUMPDEST DUP5 PUSH2 0x80F DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x789 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x108A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x924 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x924 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x907 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F1 PUSH2 0x93B PUSH2 0xB10 JUMP JUMPDEST DUP5 PUSH2 0x9EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1212 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x965 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x6 SLOAD TIMESTAMP GT PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP4 DUP4 PUSH2 0x1112 JUMP JUMPDEST POP PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xA7B DUP4 DUP4 PUSH2 0x1112 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11EE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1159 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11C9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1136 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE26 DUP4 DUP4 DUP4 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0xE91 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFD0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF24 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x108A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1042 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1027 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x106F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 PUSH2 0x111F PUSH2 0xB10 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209D1E 0xBF DUP12 SWAP4 ORIGIN 0xF7 PUSH29 0xFAA03BB8B88A67614C3482F10BF9A6F23E05EE04BE59ECCB64736F6C63 NUMBER STOP MOD STOP STOP CALLER ",
							"sourceMap": "144:948:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;144:948:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2168:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4244:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4877:317:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;358:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3086:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5589:215:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;391:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3399:125:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3399:125:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2370:93:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6291:266:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;747:126:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;747:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;312:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3957:149:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3957:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;358:29:0:-;;;;:::o;3086:89:2:-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;391:21:0:-;;;;;;;;;;;;;:::o;3399:125:2:-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;747:126:0:-;829:4;1009:6;;;;;;;;;;;995:20;;:10;:20;;;991:94;;;1039:8;;1033:3;:14;1025:23;;;;;;841:27:::1;856:3;861:6;841:14;:27::i;:::-;;991:94:::0;;;841:27:::1;856:3;861:6;841:14;:27::i;:::-;;991:94:::0;747:126;;;;:::o;312:42::-;;;;:::o;3957:149:2:-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:4:-;651:15;685:10;678:17;;598:104;:::o;9355:340:2:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3727:172:2:-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;10701:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "943200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "1050",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1241",
								"decimals()": "1128",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"player()": "1076",
								"symbol()": "infinite",
								"timeLock()": "1071",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "MSTORE"
								},
								{
									"begin": 341,
									"end": 354,
									"name": "PUSH",
									"value": "12CC0300"
								},
								{
									"begin": 335,
									"end": 338,
									"name": "TIMESTAMP"
								},
								{
									"begin": 335,
									"end": 354,
									"name": "ADD"
								},
								{
									"begin": 312,
									"end": 354,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 312,
									"end": 354,
									"name": "SSTORE"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "POP"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "MLOAD"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "PUSHSIZE"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "CODESIZE"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SUB"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "PUSHSIZE"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP4"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "CODECOPY"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP2"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP2"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "ADD"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP2"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "ADD"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "DUP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "MLOAD"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "ADD"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP3"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP2"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "SWAP1"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "POP"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "POP"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "4E6175676874436F696E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "3078300000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2"
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP"
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 500,
									"end": 507,
									"name": "DUP1"
								},
								{
									"begin": 491,
									"end": 497,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 491,
									"end": 497,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "EXP"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "DUP2"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "SLOAD"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "DUP2"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "MUL"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "NOT"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "AND"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "SWAP1"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "DUP4"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "AND"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "MUL"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "OR"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "SWAP1"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "SSTORE"
								},
								{
									"begin": 491,
									"end": 507,
									"name": "POP"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 553,
									"end": 561,
									"name": "SHL"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "SHR"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "JUMPDEST"
								},
								{
									"begin": 545,
									"end": 564,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 545,
									"end": 564,
									"name": "AND"
								},
								{
									"begin": 541,
									"end": 543,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 541,
									"end": 564,
									"name": "EXP"
								},
								{
									"begin": 530,
									"end": 537,
									"name": "PUSH",
									"value": "F4240"
								},
								{
									"begin": 530,
									"end": 565,
									"name": "MUL"
								},
								{
									"begin": 513,
									"end": 527,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 513,
									"end": 565,
									"name": "DUP2"
								},
								{
									"begin": 513,
									"end": 565,
									"name": "SWAP1"
								},
								{
									"begin": 513,
									"end": 565,
									"name": "SSTORE"
								},
								{
									"begin": 513,
									"end": 565,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "SLOAD"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "EXP"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "SWAP1"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "DIV"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 658,
									"end": 664,
									"name": "AND"
								},
								{
									"begin": 666,
									"end": 680,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 666,
									"end": 680,
									"name": "SLOAD"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 657,
									"name": "SHL"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "SHR"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 652,
									"end": 681,
									"name": "JUMPDEST"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "SLOAD"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "EXP"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "SWAP1"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "DIV"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 713,
									"end": 719,
									"name": "AND"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "AND"
								},
								{
									"begin": 709,
									"end": 710,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "AND"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 721,
									"end": 735,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 721,
									"end": 735,
									"name": "SLOAD"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "MLOAD"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "DUP1"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "DUP3"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "DUP2"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "MSTORE"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "ADD"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "SWAP2"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "POP"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "POP"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "MLOAD"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "DUP1"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "SWAP2"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "SUB"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "SWAP1"
								},
								{
									"begin": 692,
									"end": 736,
									"name": "LOG3"
								},
								{
									"begin": 417,
									"end": 741,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "JUMPDEST"
								},
								{
									"begin": 3135,
									"end": 3140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "SWAP1"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "SLOAD"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "SWAP1"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "EXP"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "SWAP1"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DIV"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "AND"
								},
								{
									"begin": 3152,
									"end": 3168,
									"name": "SWAP1"
								},
								{
									"begin": 3152,
									"end": 3168,
									"name": "POP"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "SWAP1"
								},
								{
									"begin": 3086,
									"end": 3175,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMPDEST"
								},
								{
									"begin": 7934,
									"end": 7935,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "AND"
								},
								{
									"begin": 7915,
									"end": 7922,
									"name": "DUP3"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "AND"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "EQ"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "ISZERO"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPI"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SUB"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP2"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SUB"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "REVERT"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPDEST"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 8012,
									"end": 8013,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8016,
									"end": 8023,
									"name": "DUP4"
								},
								{
									"begin": 8025,
									"end": 8031,
									"name": "DUP4"
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "SHL"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "SHR"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMPDEST"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 8075,
									"end": 8081,
									"name": "DUP2"
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "SLOAD"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SHL"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"value": "18446744073709551703"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "OR"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SWAP1"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP2"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP1"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SHR"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMPDEST"
								},
								{
									"begin": 8043,
									"end": 8055,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "DUP2"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "SWAP1"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "SSTORE"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "POP"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 8136,
									"end": 8142,
									"name": "DUP2"
								},
								{
									"begin": 8113,
									"end": 8122,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP1"
								},
								{
									"begin": 8123,
									"end": 8130,
									"name": "DUP6"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "AND"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "AND"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "ADD"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SWAP1"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "ADD"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "KECCAK256"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SLOAD"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "SHL"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"value": "18446744073709551703"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "OR"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "SWAP1"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP2"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP1"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SHR"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMPDEST"
								},
								{
									"begin": 8092,
									"end": 8101,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP1"
								},
								{
									"begin": 8102,
									"end": 8109,
									"name": "DUP5"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "AND"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "AND"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "ADD"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "SWAP1"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "ADD"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "KECCAK256"
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "DUP2"
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SWAP1"
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SSTORE"
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "POP"
								},
								{
									"begin": 8179,
									"end": 8186,
									"name": "DUP2"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "AND"
								},
								{
									"begin": 8175,
									"end": 8176,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "AND"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8188,
									"end": 8194,
									"name": "DUP4"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP1"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP3"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP2"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MSTORE"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "ADD"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP2"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "POP"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "POP"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP1"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP2"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SUB"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP1"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "LOG3"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMPDEST"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMPDEST"
								},
								{
									"begin": 2748,
									"end": 2755,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2776,
									"name": "DUP1"
								},
								{
									"begin": 2783,
									"end": 2784,
									"name": "DUP3"
								},
								{
									"begin": 2779,
									"end": 2780,
									"name": "DUP5"
								},
								{
									"begin": 2779,
									"end": 2784,
									"name": "ADD"
								},
								{
									"begin": 2767,
									"end": 2784,
									"name": "SWAP1"
								},
								{
									"begin": 2767,
									"end": 2784,
									"name": "POP"
								},
								{
									"begin": 2807,
									"end": 2808,
									"name": "DUP4"
								},
								{
									"begin": 2802,
									"end": 2803,
									"name": "DUP2"
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "LT"
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "ISZERO"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPI"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SUB"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP2"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SUB"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "REVERT"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPDEST"
								},
								{
									"begin": 2857,
									"end": 2858,
									"name": "DUP1"
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "SWAP2"
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "POP"
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "POP"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "SWAP3"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "SWAP2"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "POP"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "POP"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SLOAD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "AND"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ISZERO"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "MUL"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SUB"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "AND"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DIV"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "MSTORE"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "KECCAK256"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DIV"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "LT"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPI"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "MLOAD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "NOT"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "AND"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP4"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "OR"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP6"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SSTORE"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP6"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SSTORE"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ISZERO"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPI"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "GT"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ISZERO"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPI"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "MLOAD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SSTORE"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP3"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "GT"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ISZERO"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPI"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP2"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SSTORE"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "ADD"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "SWAP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "JUMPDEST"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "CODECOPY"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 1092,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d1ebf8b9332f77cfaa03bb8b88a67614c3482f10bf9a6f23e05ee04be59eccb64736f6c63430006000033",
									".code": [
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "MSTORE"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "LT"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "SHR"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "48DB5F89"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "GT"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "GT"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "D085835A"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMP"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "48DB5F89"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMP"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "GT"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "2FF2E9DC"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMP"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 1092,
											"name": "REVERT"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "RETURN"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "MLOAD"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DUP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DUP3"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "AND"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "AND"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DUP2"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "MSTORE"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "ADD"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP2"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "MLOAD"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DUP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP2"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SUB"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "RETURN"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "AND"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP3"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP3"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "MLOAD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP3"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ISZERO"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ISZERO"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ISZERO"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ISZERO"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "MSTORE"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "ADD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "MLOAD"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "DUP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SUB"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP1"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "RETURN"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP1"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP3"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "MSTORE"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "ADD"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP2"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP1"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP2"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SUB"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SWAP1"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "RETURN"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST"
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5"
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5"
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD"
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1"
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5"
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY"
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST"
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST"
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "SLOAD"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 387,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST"
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6"
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST"
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST"
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SLOAD"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "EXP"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "SWAP1"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DIV"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "AND"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "DUP2"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD"
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY"
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST"
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST"
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SLOAD"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "EXP"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DIV"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 995,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "CALLER"
										},
										{
											"begin": 995,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 995,
											"end": 1015,
											"name": "EQ"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "ISZERO"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "JUMPI"
										},
										{
											"begin": 1039,
											"end": 1047,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1039,
											"end": 1047,
											"name": "SLOAD"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1033,
											"end": 1047,
											"name": "GT"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "JUMPI"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "REVERT"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1025,
											"end": 1048,
											"name": "JUMPDEST"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 856,
											"end": 859,
											"name": "DUP4"
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP4"
										},
										{
											"begin": 841,
											"end": 855,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "JUMP"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "JUMPDEST"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 856,
											"end": 859,
											"name": "DUP4"
										},
										{
											"begin": 861,
											"end": 867,
											"name": "DUP4"
										},
										{
											"begin": 841,
											"end": 855,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 841,
											"end": 868,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 991,
											"end": 1085,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP3"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "SWAP2"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "POP"
										},
										{
											"begin": 747,
											"end": 873,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "SLOAD"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 312,
											"end": 354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD"
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1"
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER"
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST"
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND"
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST"
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST"
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1"
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP"
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND"
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4"
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4"
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY"
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST"
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND"
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST"
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4"
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4"
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT"
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5"
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB"
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST"
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST"
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5"
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"player()": "48db5f89",
							"symbol()": "95d89b41",
							"timeLock()": "d085835a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/NaughtCoin.sol\":\"NaughtCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NaughtCoin.sol\":{\"keccak256\":\"0x9703bf953269af710651daf09b7893964dcbec9f8a91c7dfe93d415f232f891f\",\"urls\":[\"bzz-raw://209f504c7978edf4d7e236cf73b8742b21ba08cacaab4db8dc1c5a5931e32595\",\"dweb:/ipfs/QmPZCcCBwrtpfFodWHZF4cqjvcZhkAzsia2wdVrRvbhQAf\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 466,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 11,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "timeLock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "INITIAL_SUPPLY",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "contracts/NaughtCoin.sol:NaughtCoin",
								"label": "player",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x76F0 0xC0 0xBA SWAP12 DUP15 0xF STOP SWAP3 SWAP5 0xBC 0xB2 DUP16 KECCAK256 0xD6 CHAINID 0xDE 0xAD MUL 0xA9 DUP11 0xC 0xC1 0xF8 0xC8 PUSH11 0x73FE5B69BE64736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x76F0 0xC0 0xBA SWAP12 DUP15 0xF STOP SWAP3 SWAP5 0xBC 0xB2 DUP16 KECCAK256 0xD6 CHAINID 0xDE 0xAD MUL 0xA9 DUP11 0xC 0xC1 0xF8 0xC8 PUSH11 0x73FE5B69BE64736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_19:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_41:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_104:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_104)\n    tag_106:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212203d9f43ace71a1574067437548ea7f9f9e71b535e4e8c79b8bf4e34a3a0a7c37e64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013b5380380620013b5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002ba565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b620002b791905b80821115620002b357600081600090555060010162000299565b5090565b90565b6110eb80620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2790919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109160259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd86022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110486025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fb56023913960400191505060405180910390fd5b610cc3838383610faf565b610d2e81604051806060016040528060268152602001610ffa602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610fa5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203d9f43ace71a1574067437548ea7f9f9e71b535e4e8c79b8bf4e34a3a0a7c37e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13B5 CODESIZE SUB DUP1 PUSH3 0x13B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2BA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2B7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x299 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10EB DUP1 PUSH3 0x2CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1020 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1091 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x106D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1048 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFFA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212203D9F NUMBER 0xAC 0xE7 BYTE ISZERO PUSH21 0x67437548EA7F9F9E71B535E4E8C79B8BF4E34A3A0 0xA7 0xC3 PUSH31 0x64736F6C634300060000330000000000000000000000000000000000000000 ",
							"sourceMap": "1321:9474:2:-:0;;;1958:145;8:9:-1;5:2;;;30:1;27;20:12;5:2;1958:145:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1958:145:2;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1958:145:2;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1958:145:2;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2790919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109160259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061106d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd86022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110486025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fb56023913960400191505060405180910390fd5b610cc3838383610faf565b610d2e81604051806060016040528060268152602001610ffa602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610fa5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203d9f43ace71a1574067437548ea7f9f9e71b535e4e8c79b8bf4e34a3a0a7c37e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1020 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1091 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x106D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1048 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFB5 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFFA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF27 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212203D9F NUMBER 0xAC 0xE7 BYTE ISZERO PUSH21 0x67437548EA7F9F9E71B535E4E8C79B8BF4E34A3A0 0xA7 0xC3 PUSH31 0x64736F6C634300060000330000000000000000000000000000000000000000 ",
							"sourceMap": "1321:9474:2:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:9474:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2168:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4244:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4877:317:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5589:215:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3399:125:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2370:93:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6291:266:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3727:172:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3957:149:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:4:-;651:15;685:10;678:17;;598:104;:::o;9355:340:2:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:2:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "866200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2"
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP"
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP"
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d9f43ace71a1574067437548ea7f9f9e71b535e4e8c79b8bf4e34a3a0a7c37e64736f6c63430006000033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST"
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST"
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5"
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5"
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST"
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD"
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1"
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST"
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5"
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5"
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY"
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST"
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST"
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST"
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND"
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1"
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST"
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST"
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6"
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST"
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST"
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD"
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1"
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST"
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY"
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST"
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST"
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST"
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST"
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5"
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST"
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD"
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1"
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER"
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST"
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND"
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST"
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST"
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1"
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE"
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP"
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND"
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4"
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4"
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY"
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST"
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1"
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE"
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST"
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE"
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND"
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST"
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4"
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4"
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT"
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP"
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3"
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5"
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB"
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST"
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 452,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 458,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 460,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 462,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 464,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 466,
								"contract": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/NaughtCoin.sol": {
				"ast": {
					"absolutePath": "contracts/NaughtCoin.sol",
					"exportedSymbols": {
						"NaughtCoin": [
							95
						]
					},
					"id": 96,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 96,
							"sourceUnit": 921,
							"src": "57:84:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 920,
										"src": "167:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$920",
											"typeString": "contract ERC20"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "167:5:0"
								}
							],
							"contractDependencies": [
								920,
								989,
								1012
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 95,
							"linearizedBaseContracts": [
								95,
								920,
								989,
								1012
							],
							"name": "NaughtCoin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d085835a",
									"id": 11,
									"name": "timeLock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 95,
									"src": "312:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "312:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 6,
											"name": "now",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1029,
											"src": "335:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_315360000_by_1",
												"typeString": "int_const 315360000"
											},
											"id": 9,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 7,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "341:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "333635",
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "346:8:0",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_31536000_by_1",
													"typeString": "int_const 31536000"
												},
												"value": "365"
											},
											"src": "341:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_315360000_by_1",
												"typeString": "int_const 315360000"
											}
										},
										"src": "335:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ff2e9dc",
									"id": 13,
									"name": "INITIAL_SUPPLY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 95,
									"src": "358:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48db5f89",
									"id": 15,
									"name": "player",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 95,
									"src": "391:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "391:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "485:256:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "491:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "_player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "491:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "491:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "INITIAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "513:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "31303030303030",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000_by_1",
																"typeString": "int_const 1000000"
															},
															"value": "1000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3130",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "541:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 33,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "553:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 34,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "553:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "545:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 31,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "545:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "545:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "541:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 37,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "540:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "530:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "513:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "513:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 42,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 43,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "666:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "652:29:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "709:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "701:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 47,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "701:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "701:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 51,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 52,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 46,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "692:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "692:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "EmitStatement",
												"src": "687:49:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "4e6175676874436f696e",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "455:12:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4afc39a1c0cce09bb97a850a1428ae64f67913cc9defe3d11f67b29861baf4b9",
														"typeString": "literal_string \"NaughtCoin\""
													},
													"value": "NaughtCoin"
												},
												{
													"argumentTypes": null,
													"hexValue": "307830",
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "469:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
														"typeString": "literal_string \"0x0\""
													},
													"value": "0x0"
												}
											],
											"id": 22,
											"modifierName": {
												"argumentTypes": null,
												"id": 19,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 920,
												"src": "449:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$920_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "449:26:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "_player",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 56,
												"src": "429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:0:0"
									},
									"scope": 95,
									"src": "417:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										552
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "835:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 71,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "856:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 72,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 68,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_NaughtCoin_$95",
																"typeString": "contract super NaughtCoin"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 552,
														"src": "841:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "841:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 64,
											"modifierName": {
												"argumentTypes": null,
												"id": 63,
												"name": "lockTokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 94,
												"src": "810:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "810:10:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 62,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "794:8:0"
									},
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "765:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:29:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:6:0"
									},
									"scope": 95,
									"src": "747:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "985:104:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 78,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "995:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "995:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "player",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "995:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 91,
													"nodeType": "Block",
													"src": "1070:15:0",
													"statements": [
														{
															"id": 90,
															"nodeType": "PlaceholderStatement",
															"src": "1077:1:0"
														}
													]
												},
												"id": 92,
												"nodeType": "IfStatement",
												"src": "991:94:0",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1017:47:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 83,
																			"name": "now",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "1033:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 84,
																			"name": "timeLock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1039:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1033:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 82,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1030,
																		1031
																	],
																	"referencedDeclaration": 1030,
																	"src": "1025:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1025:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 87,
															"nodeType": "ExpressionStatement",
															"src": "1025:23:0"
														},
														{
															"id": 88,
															"nodeType": "PlaceholderStatement",
															"src": "1056:1:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 94,
									"name": "lockTokens",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:0"
									},
									"src": "963:126:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 96,
							"src": "144:948:0"
						}
					],
					"src": "32:1061:0"
				},
				"id": 0
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							436
						]
					},
					"id": 437,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 97,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 126,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 111,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 121,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 119,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 107,
													"id": 120,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 123,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 124,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 107,
												"id": 125,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 127,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 436,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 145,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 143,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 137,
													"id": 144,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 148,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 150,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 137,
												"id": 151,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": "@dev Returns the substraction of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 436,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 171,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 169,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 163,
													"id": 170,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 192,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 178,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 181,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 187,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 163,
													"id": 186,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 189,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 190,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 163,
												"id": 191,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 436,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 204,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 211,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 209,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 203,
													"id": 210,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 213,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 216,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 203,
												"id": 217,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": "@dev Returns the division of two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 219,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 436,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 237,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 235,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 229,
													"id": 236,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 239,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 240,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 242,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 229,
												"id": 243,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 245,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 436,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 269,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 256,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 257,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 261,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 262,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 267,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 253,
												"id": 268,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow.",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 270,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 270,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 270,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 436,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 281,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 286,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 287,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 289,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 436,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 305,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 299,
													"id": 304,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 323,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 313,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 314,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 321,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 307,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 322,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow.",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 436,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 334,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 340,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 332,
												"id": 343,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 345,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 345,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 345,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 436,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 361,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 362,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 364,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 366,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 436,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 378,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 379,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 381,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 384,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 385,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 376,
												"id": 387,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 436,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 401,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 404,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 410,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 412,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 436,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 427,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 431,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 422,
												"id": 433,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 436,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 437,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							920
						]
					},
					"id": 921,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 438,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 439,
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 1013,
							"src": "66:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 440,
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 990,
							"src": "100:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 441,
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 437,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 442,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1012,
										"src": "1339:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1012",
											"typeString": "contract Context"
										}
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 444,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 989,
										"src": "1348:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$989",
											"typeString": "contract IERC20"
										}
									},
									"id": 445,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								}
							],
							"contractDependencies": [
								989,
								1012
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20PresetMinterPauser}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920,
								989,
								1012
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 448,
									"libraryName": {
										"contractScope": null,
										"id": 446,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 436,
										"src": "1367:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$436",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:2",
									"typeName": {
										"id": 447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1394:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 451,
										"keyType": {
											"id": 449,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 450,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 458,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1447:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 457,
										"keyType": {
											"id": 453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 456,
											"keyType": {
												"id": 454,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1523:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 462,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1558:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 464,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1584:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 463,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 466,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 920,
									"src": "1612:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 465,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "2022:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 473,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2032:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "2040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 477,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "2055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 478,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 481,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2082:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:2"
											}
										]
									},
									"documentation": "@dev Sets the values for {name} and {symbol}, initializes {decimals} with\na default value of 18.\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     * All three of these values are immutable: they can only be set once during\nconstruction.",
									"id": 486,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1971:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1992:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:2"
									},
									"scope": 920,
									"src": "1958:145:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "2228:29:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 491,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "2245:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 490,
												"id": 492,
												"nodeType": "Return",
												"src": "2238:12:2"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"functionSelector": "06fdde03",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 494,
												"src": "2213:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:2"
									},
									"scope": 920,
									"src": "2168:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2432:31:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 499,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 498,
												"id": 500,
												"nodeType": "Return",
												"src": "2442:14:2"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"functionSelector": "95d89b41",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 502,
												"src": "2417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:2"
									},
									"scope": 920,
									"src": "2370:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "3142:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 507,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "3159:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 506,
												"id": 508,
												"nodeType": "Return",
												"src": "3152:16:2"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\ncalled.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"functionSelector": "313ce567",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 510,
												"src": "3135:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:2"
									},
									"scope": 920,
									"src": "3086:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3305:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 516,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "3322:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 517,
												"nodeType": "Return",
												"src": "3315:19:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"functionSelector": "18160ddd",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 512,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:2"
									},
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 519,
												"src": "3296:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:2"
									},
									"scope": 920,
									"src": "3235:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3482:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 527,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3499:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 529,
													"indexExpression": {
														"argumentTypes": null,
														"id": 528,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "3509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 530,
												"nodeType": "Return",
												"src": "3492:25:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"functionSelector": "70a08231",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:2"
									},
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "3418:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "3473:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:2"
									},
									"scope": 920,
									"src": "3399:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										943
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "3819:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 543,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "3839:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 545,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3853:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 546,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "3829:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 541,
												"id": 550,
												"nodeType": "Return",
												"src": "3881:11:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"functionSelector": "a9059cbb",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 538,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:2"
									},
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "3745:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "3764:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:2"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 552,
												"src": "3813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:2"
									},
									"scope": 920,
									"src": "3727:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "4055:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 562,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4072:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 564,
														"indexExpression": {
															"argumentTypes": null,
															"id": 563,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4084:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 566,
													"indexExpression": {
														"argumentTypes": null,
														"id": 565,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "4091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 567,
												"nodeType": "Return",
												"src": "4065:34:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"functionSelector": "dd62ed3e",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:2"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "3976:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "3991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "4046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:2"
									},
									"scope": 920,
									"src": "3957:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "4333:77:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 580,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "4352:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4366:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4375:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "4343:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 578,
												"id": 587,
												"nodeType": "Return",
												"src": "4392:11:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "095ea7b3",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 575,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:2"
									},
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 589,
												"src": "4261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 589,
												"src": "4278:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 589,
												"src": "4327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:2"
									},
									"scope": 920,
									"src": "4244:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "4989:205:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 602,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "5009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5017:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5028:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "4999:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 608,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "5054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 609,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5062:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 618,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "5114:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 611,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "5076:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 613,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 612,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "5088:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 616,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 614,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "5096:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 389,
																"src": "5076:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "5045:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 600,
												"id": 624,
												"nodeType": "Return",
												"src": "5176:11:2"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20}.\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for ``sender``'s tokens of at least\n`amount`.",
									"functionSelector": "23b872dd",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 597,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:2"
									},
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 626,
												"src": "4899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 626,
												"src": "4915:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 626,
												"src": "4934:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 626,
												"src": "4983:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:2"
									},
									"scope": 920,
									"src": "4877:317:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "5683:121:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 636,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5702:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 638,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 646,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "5764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 639,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "5725:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 642,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 640,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "5737:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 644,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 643,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "5751:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 270,
																"src": "5725:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "5693:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 651,
												"nodeType": "Return",
												"src": "5786:11:2"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "39509351",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "5616:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "5633:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:2"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "5677:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:2"
									},
									"scope": 920,
									"src": "5589:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "6390:167:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 663,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "6409:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 665,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "6423:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 673,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "6471:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 666,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "6432:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 669,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 667,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "6444:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 671,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 670,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "6458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 389,
																"src": "6432:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "6400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 661,
												"id": 679,
												"nodeType": "Return",
												"src": "6539:11:2"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"functionSelector": "a457c2d7",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "6318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "6335:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:2"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "6384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:2"
									},
									"scope": 920,
									"src": "6291:266:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "7118:443:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 691,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "7136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 692,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "7128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "7216:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "7208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 711,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "7311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 712,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "7319:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "7330:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7290:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 716,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7348:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"argumentTypes": null,
															"id": 717,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "7358:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 723,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 719,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "7368:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 720,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "7378:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 389,
															"src": "7368:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 728,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 730,
														"indexExpression": {
															"argumentTypes": null,
															"id": 729,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "7459:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 735,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "7497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 731,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "7472:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 733,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 732,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "7482:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "7472:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 740,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "7528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 741,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "7536:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "7547:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "7519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "EmitStatement",
												"src": "7514:40:2"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "7050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "7066:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 746,
												"src": "7085:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:2"
									},
									"scope": 920,
									"src": "7031:530:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7897:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 754,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "7915:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "7907:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "8016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 763,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7983:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 772,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "8043:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 775,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "8075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 773,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "8058:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "8058:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 779,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8092:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 781,
														"indexExpression": {
															"argumentTypes": null,
															"id": 780,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "8102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "8136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "8113:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 784,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 783,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "8123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 270,
															"src": "8113:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 791,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 795,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "8179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 796,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8188:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "8158:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "EmitStatement",
												"src": "8153:42:2"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements:\n     * - `to` cannot be the zero address.",
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "7847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 800,
												"src": "7864:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:2"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:2"
									},
									"scope": 920,
									"src": "7832:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "8587:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 808,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "8605:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 809,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "8597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "8696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "8717:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "8675:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 826,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8735:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 828,
														"indexExpression": {
															"argumentTypes": null,
															"id": 827,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "8745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "8779:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "8756:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 831,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 830,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "8766:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 389,
															"src": "8756:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 838,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "8834:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 841,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "8866:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 839,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "8849:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "8849:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 846,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "8897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 847,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 851,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "8918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "8888:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "EmitStatement",
												"src": "8883:42:2"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements:\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "8537:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "8554:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:2"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:2"
									},
									"scope": 920,
									"src": "8522:410:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "9438:257:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 865,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "9456:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "9448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "9534:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1030,
															1031
														],
														"referencedDeclaration": 1031,
														"src": "9526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 884,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "9605:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 887,
															"indexExpression": {
																"argumentTypes": null,
																"id": 885,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "9617:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 888,
														"indexExpression": {
															"argumentTypes": null,
															"id": 886,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "9624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 889,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "9635:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "9665:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 894,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "9672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "9681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "9656:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "EmitStatement",
												"src": "9651:37:2"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     * This internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "9373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "9388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "9405:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:2"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:2"
									},
									"scope": 920,
									"src": "9355:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "10076:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 904,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "10086:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 905,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "10098:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:2"
											}
										]
									},
									"documentation": "@dev Sets {decimals} to a value other than the default one of 18.\n     * WARNING: This function should only be called from the constructor. Most\napplications that interact with token contracts will not expect\n{decimals} to ever change, and may work incorrectly if it does.",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 909,
												"src": "10042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 900,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:2"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:2"
									},
									"scope": 920,
									"src": "10018:96:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "10790:3:2",
										"statements": []
									},
									"documentation": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be to transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "10731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "10745:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "10757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:2"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:2"
									},
									"scope": 920,
									"src": "10701:92:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 921,
							"src": "1321:9474:2"
						}
					],
					"src": "33:10763:2"
				},
				"id": 2
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							989
						]
					},
					"id": 990,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP.",
							"fullyImplemented": false,
							"id": 989,
							"linearizedBaseContracts": [
								989
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"functionSelector": "18160ddd",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 927,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 989,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"functionSelector": "70a08231",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 934,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 934,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 989,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "a9059cbb",
									"id": 943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 989,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"functionSelector": "dd62ed3e",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 989,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"functionSelector": "095ea7b3",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 961,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 961,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 961,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 989,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "23b872dd",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 972,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 972,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 972,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 972,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 989,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 980,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 988,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 988,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 988,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 988,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 990,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1012
						]
					},
					"id": 1013,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 991,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1012,
							"linearizedBaseContracts": [
								1012
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "668:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 996,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "685:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 995,
												"id": 998,
												"nodeType": "Return",
												"src": "678:17:4"
											}
										]
									},
									"documentation": null,
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:4"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1000,
												"src": "651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:4"
									},
									"scope": 1012,
									"src": "598:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "773:165:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1005,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1041,
													"src": "783:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1012",
														"typeString": "contract Context"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "783:4:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1007,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "923:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1009,
												"nodeType": "Return",
												"src": "916:15:4"
											}
										]
									},
									"documentation": null,
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:4"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1011,
												"src": "759:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:4"
									},
									"scope": 1012,
									"src": "708:230:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1013,
							"src": "566:374:4"
						}
					],
					"src": "33:908:4"
				},
				"id": 4
			}
		}
	}
}