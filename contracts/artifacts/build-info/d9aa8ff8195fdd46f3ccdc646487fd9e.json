{
	"id": "d9aa8ff8195fdd46f3ccdc646487fd9e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Reentrance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\";\n\ncontract Reentrance {\n  \n  using SafeMath for uint256;\n  mapping(address => uint) public balances;\n\n  function donate(address _to) public payable {\n    balances[_to] = balances[_to].add(msg.value);\n  }\n\n  function balanceOf(address _who) public view returns (uint balance) {\n    return balances[_who];\n  }\n\n  function withdraw(uint _amount) public {\n    if(balances[msg.sender] >= _amount) {\n      (bool result,) = msg.sender.call.value(_amount)(\"\");\n      if(result) {\n        _amount;\n      }\n      balances[msg.sender] -= _amount;\n    }\n  }\n\n  receive() external payable {}\n}"
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Reentrance.sol": {
				"Reentrance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Reentrance.sol\":139:717  contract Reentrance {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Reentrance.sol\":139:717  contract Reentrance {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reentrance.sol\":139:717  contract Reentrance {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x362a95\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Reentrance.sol\":241:340  function donate(address _to) public payable {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"contracts/Reentrance.sol\":241:340  function donate(address _to) public payable {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Reentrance.sol\":196:236  mapping(address => uint) public balances */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/Reentrance.sol\":196:236  mapping(address => uint) public balances */\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/Reentrance.sol\":196:236  mapping(address => uint) public balances */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reentrance.sol\":448:682  function withdraw(uint _amount) public {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/Reentrance.sol\":448:682  function withdraw(uint _amount) public {... */\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/Reentrance.sol\":448:682  function withdraw(uint _amount) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Reentrance.sol\":344:444  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/Reentrance.sol\":344:444  function balanceOf(address _who) public view returns (uint balance) {... */\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"contracts/Reentrance.sol\":344:444  function balanceOf(address _who) public view returns (uint balance) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reentrance.sol\":241:340  function donate(address _to) public payable {... */\n    tag_11:\n        /* \"contracts/Reentrance.sol\":307:335  balances[_to].add(msg.value) */\n      tag_25\n        /* \"contracts/Reentrance.sol\":325:334  msg.value */\n      callvalue\n        /* \"contracts/Reentrance.sol\":307:315  balances */\n      0x00\n        /* \"contracts/Reentrance.sol\":307:320  balances[_to] */\n      dup1\n        /* \"contracts/Reentrance.sol\":316:319  _to */\n      dup5\n        /* \"contracts/Reentrance.sol\":307:320  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrance.sol\":307:324  balances[_to].add */\n      tag_26\n      swap1\n        /* \"contracts/Reentrance.sol\":307:335  balances[_to].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_25:\n        /* \"contracts/Reentrance.sol\":291:299  balances */\n      0x00\n        /* \"contracts/Reentrance.sol\":291:304  balances[_to] */\n      dup1\n        /* \"contracts/Reentrance.sol\":300:303  _to */\n      dup4\n        /* \"contracts/Reentrance.sol\":291:304  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Reentrance.sol\":291:335  balances[_to] = balances[_to].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Reentrance.sol\":241:340  function donate(address _to) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Reentrance.sol\":196:236  mapping(address => uint) public balances */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Reentrance.sol\":448:682  function withdraw(uint _amount) public {... */\n    tag_19:\n        /* \"contracts/Reentrance.sol\":520:527  _amount */\n      dup1\n        /* \"contracts/Reentrance.sol\":496:504  balances */\n      0x00\n        /* \"contracts/Reentrance.sol\":496:516  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrance.sol\":505:515  msg.sender */\n      caller\n        /* \"contracts/Reentrance.sol\":496:516  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrance.sol\":496:527  balances[msg.sender] >= _amount */\n      lt\n        /* \"contracts/Reentrance.sol\":493:678  if(balances[msg.sender] >= _amount) {... */\n      tag_28\n      jumpi\n        /* \"contracts/Reentrance.sol\":538:549  bool result */\n      0x00\n        /* \"contracts/Reentrance.sol\":554:564  msg.sender */\n      caller\n        /* \"contracts/Reentrance.sol\":554:569  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Reentrance.sol\":576:583  _amount */\n      dup3\n        /* \"contracts/Reentrance.sol\":554:588  msg.sender.call.value(_amount)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_30)\n        /* \"--CODEGEN--\":14:41   */\n    tag_31:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_30:\n      pop\n        /* \"contracts/Reentrance.sol\":537:588  (bool result,) = msg.sender.call.value(_amount)(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Reentrance.sol\":664:671  _amount */\n      dup2\n        /* \"contracts/Reentrance.sol\":640:648  balances */\n      0x00\n        /* \"contracts/Reentrance.sol\":640:660  balances[msg.sender] */\n      dup1\n        /* \"contracts/Reentrance.sol\":649:659  msg.sender */\n      caller\n        /* \"contracts/Reentrance.sol\":640:660  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Reentrance.sol\":640:671  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Reentrance.sol\":493:678  if(balances[msg.sender] >= _amount) {... */\n      pop\n    tag_28:\n        /* \"contracts/Reentrance.sol\":448:682  function withdraw(uint _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Reentrance.sol\":344:444  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_23:\n        /* \"contracts/Reentrance.sol\":398:410  uint balance */\n      0x00\n        /* \"contracts/Reentrance.sol\":425:433  balances */\n      dup1\n        /* \"contracts/Reentrance.sol\":425:439  balances[_who] */\n      0x00\n        /* \"contracts/Reentrance.sol\":434:438  _who */\n      dup4\n        /* \"contracts/Reentrance.sol\":425:439  balances[_who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Reentrance.sol\":418:439  return balances[_who] */\n      swap1\n      pop\n        /* \"contracts/Reentrance.sol\":344:444  function balanceOf(address _who) public view returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cc5806491c2f51c40f3ffffaf6c376a5017dd05188846344fe641e387702614564736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061044a806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea2646970667358221220cc5806491c2f51c40f3ffffaf6c376a5017dd05188846344fe641e387702614564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PC MOD 0x49 SHR 0x2F MLOAD 0xC4 0xF EXTCODEHASH SELFDESTRUCT STATICCALL 0xF6 0xC3 PUSH23 0xA5017DD05188846344FE641E387702614564736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "139:578:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:578:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea2646970667358221220cc5806491c2f51c40f3ffffaf6c376a5017dd05188846344fe641e387702614564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PC MOD 0x49 SHR 0x2F MLOAD 0xC4 0xF EXTCODEHASH SELFDESTRUCT STATICCALL 0xF6 0xC3 PUSH23 0xA5017DD05188846344FE641E387702614564736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "139:578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;241:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;241:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;196:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:40:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;196:40:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;448:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:234:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;448:234:0;;;;;;;;;;;;;;;;;:::i;:::-;;344:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;344:100:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;344:100:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;241:99;307:28;325:9;307:8;:13;316:3;307:13;;;;;;;;;;;;;;;;:17;;:28;;;;:::i;:::-;291:8;:13;300:3;291:13;;;;;;;;;;;;;;;:44;;;;241:99;:::o;196:40::-;;;;;;;;;;;;;;;;;:::o;448:234::-;520:7;496:8;:20;505:10;496:20;;;;;;;;;;;;;;;;:31;493:185;;538:11;554:10;:15;;576:7;554:34;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;537:51:0;;;664:7;640:8;:20;649:10;640:20;;;;;;;;;;;;;;;;:31;;;;;;;;;;;493:185;;448:234;:::o;344:100::-;398:12;425:8;:14;434:4;425:14;;;;;;;;;;;;;;;;418:21;;344:100;;;:::o;2690:175:1:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219600",
								"executionCost": "263",
								"totalCost": "219863"
							},
							"external": {
								"balanceOf(address)": "1240",
								"balances(address)": "1169",
								"donate(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "MSTORE"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "POP"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "DUP1"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "CODECOPY"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 717,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc5806491c2f51c40f3ffffaf6c376a5017dd05188846344fe641e387702614564736f6c63430006000033",
									".code": [
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "MSTORE"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "LT"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "SHR"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "362A95"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "STOP"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 717,
											"name": "REVERT"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP3"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "STOP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP3"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "RETURN"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "DUP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "DUP2"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "ADD"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "DUP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "DUP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "ADD"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP3"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP2"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "SWAP1"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "STOP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "AND"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP3"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP3"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "MSTORE"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "ADD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SUB"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "RETURN"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 325,
											"end": 334,
											"name": "CALLVALUE"
										},
										{
											"begin": 307,
											"end": 315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "DUP5"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "AND"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "DUP2"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "MSTORE"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "ADD"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "KECCAK256"
										},
										{
											"begin": 307,
											"end": 320,
											"name": "SLOAD"
										},
										{
											"begin": 307,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 307,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "SWAP2"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "AND"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 307,
											"end": 335,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 300,
											"end": 303,
											"name": "DUP4"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "MSTORE"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "MSTORE"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 291,
											"end": 304,
											"name": "KECCAK256"
										},
										{
											"begin": 291,
											"end": 335,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 335,
											"name": "SSTORE"
										},
										{
											"begin": 291,
											"end": 335,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "KECCAK256"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "SLOAD"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 236,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "JUMPDEST"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "DUP1"
										},
										{
											"begin": 496,
											"end": 504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "DUP1"
										},
										{
											"begin": 505,
											"end": 515,
											"name": "CALLER"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "AND"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "AND"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "DUP2"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "MSTORE"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "ADD"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SWAP1"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "DUP2"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "MSTORE"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "ADD"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "KECCAK256"
										},
										{
											"begin": 496,
											"end": 516,
											"name": "SLOAD"
										},
										{
											"begin": 496,
											"end": 527,
											"name": "LT"
										},
										{
											"begin": 493,
											"end": 678,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 493,
											"end": 678,
											"name": "JUMPI"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 564,
											"name": "CALLER"
										},
										{
											"begin": 554,
											"end": 569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 569,
											"name": "AND"
										},
										{
											"begin": 576,
											"end": 583,
											"name": "DUP3"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "MLOAD"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "MLOAD"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP4"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "SUB"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP6"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP8"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "GAS"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "CALL"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "SWAP3"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 554,
											"end": 588,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI"
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD"
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2"
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT"
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD"
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND"
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3"
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE"
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5"
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD"
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST"
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 588,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "DUP1"
										},
										{
											"begin": 649,
											"end": 659,
											"name": "CALLER"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "AND"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "MSTORE"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "ADD"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "KECCAK256"
										},
										{
											"begin": 640,
											"end": 660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP3"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP3"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SLOAD"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SUB"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP3"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SSTORE"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 678,
											"name": "POP"
										},
										{
											"begin": 493,
											"end": 678,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 493,
											"end": 678,
											"name": "JUMPDEST"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "POP"
										},
										{
											"begin": 448,
											"end": 682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "JUMPDEST"
										},
										{
											"begin": 398,
											"end": 410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 434,
											"end": 438,
											"name": "DUP4"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "KECCAK256"
										},
										{
											"begin": 425,
											"end": 439,
											"name": "SLOAD"
										},
										{
											"begin": 418,
											"end": 439,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 439,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST"
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1"
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1"
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"donate(address)": "00362a95",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Reentrance.sol\":\"Reentrance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Reentrance.sol\":{\"keccak256\":\"0x42df610a7e72fcb18477c47526eff4e80306718231582dccb9fb7d40bc1e73a3\",\"urls\":[\"bzz-raw://22628ea2c4c9510d98b7e5ccce66d67250e8e557015814d1f95af9c4b120739c\",\"dweb:/ipfs/QmPkLo2bsz7pTKM4HUF1S8DbDC9gThg3YuA9qfRUevsCbb\"]},\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "contracts/Reentrance.sol:Reentrance",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x76F0 0xC0 0xBA SWAP12 DUP15 0xF STOP SWAP3 SWAP5 0xBC 0xB2 DUP16 KECCAK256 0xD6 CHAINID 0xDE 0xAD MUL 0xA9 DUP11 0xC 0xC1 0xF8 0xC8 PUSH11 0x73FE5B69BE64736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x76F0 0xC0 0xBA SWAP12 DUP15 0xF STOP SWAP3 SWAP5 0xBC 0xB2 DUP16 KECCAK256 0xD6 CHAINID 0xDE 0xAD MUL 0xA9 DUP11 0xC 0xC1 0xF8 0xC8 PUSH11 0x73FE5B69BE64736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206176f0c0ba9b8e0f009294bcb28f20d646dead02a98a0cc1f8c86a73fe5b69be64736f6c63430006000033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Reentrance.sol": {
				"ast": {
					"absolutePath": "contracts/Reentrance.sol",
					"exportedSymbols": {
						"Reentrance": [
							81
						]
					},
					"id": 82,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol",
							"file": "github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 423,
							"src": "57:80:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 422,
										"src": "172:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$422",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "166:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "185:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 9,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 81,
									"src": "196:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "204:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "196:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "215:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "285:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 14,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "291:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"argumentTypes": null,
															"id": 15,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "300:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "291:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "325:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "325:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 17,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "307:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 19,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "316:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "307:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "307:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "307:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "291:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "291:44:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "00362a95",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 27,
												"src": "257:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "256:13:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:0"
									},
									"scope": 81,
									"src": "241:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "412:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 34,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "425:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 36,
													"indexExpression": {
														"argumentTypes": null,
														"id": 35,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "434:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "425:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 37,
												"nodeType": "Return",
												"src": "418:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "363:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "398:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "397:14:0"
									},
									"scope": 81,
									"src": "344:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "487:195:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 44,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "505:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "505:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "496:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "496:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 74,
												"nodeType": "IfStatement",
												"src": "493:185:0",
												"trueBody": {
													"id": 73,
													"nodeType": "Block",
													"src": "529:149:0",
													"statements": [
														{
															"assignments": [
																51,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 51,
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 73,
																	"src": "538:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "538:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 60,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "585:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 56,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "576:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 52,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "554:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 53,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "554:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "554:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "554:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																			"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "554:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "554:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "537:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 61,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "599:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 65,
															"nodeType": "IfStatement",
															"src": "596:37:0",
															"trueBody": {
																"id": 64,
																"nodeType": "Block",
																"src": "607:26:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 62,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "617:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 63,
																		"nodeType": "ExpressionStatement",
																		"src": "617:7:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 66,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "640:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 69,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 67,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "649:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "649:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "640:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "640:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "640:31:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "466:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "465:14:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:0"
									},
									"scope": 81,
									"src": "448:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "713:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 80,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "693:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:0"
									},
									"scope": 81,
									"src": "686:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "139:578:0"
						}
					],
					"src": "32:685:0"
				},
				"id": 0
			},
			"github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "github/OpenZeppelin/openzeppelin-contracts/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							422
						]
					},
					"id": 423,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 422,
							"linearizedBaseContracts": [
								422
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													95
												],
												"declarations": [
													{
														"constant": false,
														"id": 95,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 112,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 94,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 96,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 97,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 100,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 107,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 105,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 93,
													"id": 106,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 109,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 110,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 93,
												"id": 111,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 422,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 131,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 129,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 123,
													"id": 130,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 134,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 136,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 123,
												"id": 137,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": "@dev Returns the substraction of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 422,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 157,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 155,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 149,
													"id": 156,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 178,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 161,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 165,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 173,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 171,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 149,
													"id": 172,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 176,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 149,
												"id": 177,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 422,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 197,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 189,
													"id": 196,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 200,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 202,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 189,
												"id": 203,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": "@dev Returns the division of two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 422,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 223,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 221,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 215,
													"id": 222,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 228,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 215,
												"id": 229,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 422,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 255,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 242,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 243,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 247,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 253,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 254,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow.",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 422,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 273,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 275,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 422,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 286,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 291,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 285,
													"id": 290,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 309,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 294,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 295,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 299,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 307,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 308,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow.",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 422,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 326,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 327,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 329,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 331,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 422,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 350,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 422,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 365,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 370,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 371,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 373,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 422,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 387,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 394,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 396,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 422,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 410,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 413,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															440,
															441
														],
														"referencedDeclaration": 441,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 416,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 417,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 419,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 422,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 423,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			}
		}
	}
}